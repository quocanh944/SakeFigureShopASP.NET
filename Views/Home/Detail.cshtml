@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model SakeFigureShop.Models.Home.DetailViewModel
@{
    ViewData["Title"] = Model.Product.Name;
}
<!--Main layout-->
<main class="mt-5 pt-4">
    <div class="container mt-5">
        <!--Grid row-->
        <div class="row">
            <!--Grid column-->
            <div class="col-md-6 mb-4">
                <div id="carouselExampleInterval" class="carousel slide" data-mdb-ride="carousel">
                    <div class="carousel-inner">
                        <div class="carousel-item active">
                            <img src="@Model.Product.ThumbnailImageUrl" class="d-block w-100" alt="Wild Landscape" />
                        </div>
                        @foreach (var media in Model.Product.Medias)
                        {
                            <div class="carousel-item">
                                <img src="@media.Url" class="d-block w-100" alt="@Model.Product.Name" />
                            </div>
                        }
                    </div>
                    <button class="carousel-control-prev text-primary" data-mdb-target="#carouselExampleInterval" type="button" data-mdb-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Về trước</span>
                    </button>
                    <button class="carousel-control-next text-primary" data-mdb-target="#carouselExampleInterval" type="button" data-mdb-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Về sau</span>
                    </button>
                </div>
            </div>
            <!--Grid column-->
            <!--Grid column-->
            <div class="col-md-6 mb-4">
                <!--Content-->
                <div class="p-4">
                    <div class="mb-3">
                        <a href="">
                            <span class="badge bg-dark me-1">@Model.Product.Brand.Name</span>
                        </a>
                        <a href="">
                            <span class="badge bg-dark me-1">@Model.Product.Film.Name</span>
                        </a>
                        <a href="">
                            <span class="badge bg-danger me-1">Còn @Model.Product.Quantity sản phẩm</span>
                        </a>
                        <a href="">
                            <span class="badge bg-info me-1">New</span>
                        </a>
                    </div>
                    <p class="lead">
                        <span>@Model.Product.Price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</span>
                    </p>
                    <!--
                    <p class="lead">
                        <span class="me-1">
                            <del>$200</del>
                        </span>
                        <span>$100</span>
                    </p>
                    -->
                    @{
                        var prodName = Model.Product.Name + " Hãng " + Model.Product.Brand.Name;
                    }
                    <strong><p style="font-size: 20px;">@prodName</p></strong>
                    @{
                        var desc = Model.Product.Description.Split("\n");
                    }
                    @foreach(var line in desc)
                    {
                        <p>@line</p>
                    }

                    <form 
                        class="d-flex justify-content-left"
                    >
                        <!-- Default input -->
                        <div class="form-outline me-1" style="width: 100px;">
                            <input hidden value="@Model.Product.Id" name="productId" id="prodId"/>
                            <input hidden value="@Model.Product.Name" name="productName" id="prodName" />
                            <input hidden value="@Model.Product.Film.Name" name="film" id="film" />
                            <input hidden value="@Model.Product.Brand.Name" name="brand" id="brand" />
                            <input hidden type="number" value="@Model.Product.Price" name="productPrice" id="prodPrice" />
                            <input hidden value="@Model.Product.ThumbnailImageUrl" name="thumbnailUrl" id="thumbnailUrl" />
                            <input type="number" value="1" min="1" name="quantity" id="quantity" max="@Model.Product.Quantity" class="form-control" />
                        </div>
                        <button class="btn btn-primary ms-1" type="submit" id="add-to-cart-btn">
                            Thêm vào giỏ hàng
                            <i class="fas fa-shopping-cart ms-1"></i>
                        </button>
                    </form>
                </div>
                <!--Content-->
            </div>
            <!--Grid column-->
        </div>
        <!--Grid row-->

        <hr />
        <div class="row d-flex justify-content-center">
            <!--Grid column-->
            <div class="col-md-6 text-center">
                <h4 class="my-4 h4">Sản phẩm liên quan</h4>
            </div>
            <!--Grid column-->
        </div>
        <div class="row">
            @foreach (var prod in Model.RelatedProducts)
            {
                <div class="col-lg-4 col-md-6 col-sm-6 d-flex">
                    <div class="card w-100 my-2 shadow-2-strong">
                        <img src="@prod.ThumbnailImageUrl" class="card-img-top" />
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@prod.Price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</h5>
                            @{
                                var name = prod.Name + " Hãng " + prod.Brand.Name;
                            }
                            <p class="card-text">
                                @name
                            </p>
                            <div class="card-footer d-flex align-items-end pt-3 px-0 pb-0 mt-auto">
                                <a asp-area=""
                                   asp-controller="Home"
                                   asp-action="Detail"
                                   asp-route-id="@prod.Id" 
                                   class="btn btn-primary shadow-0 me-1"
                                >
                                    Xem chi tiết
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</main>
<script>
    var userAuthorized = @User.Identity.IsAuthenticated.ToString().ToLower();
    $(() => {
        $("#add-to-cart-btn").click(e => {
            e.preventDefault();
            const id = $("#prodId").val()
            const quantity = Number.parseInt($("#quantity").val())
            const maxQuantity = Number.parseInt($("#quantity").prop("max"))
            const brand = $("#brand").val()
            const film = $("#film").val()
            const name = $("#prodName").val()
            const price = $("#prodPrice").val()
            const thumbnailUrl = $("#thumbnailUrl").val()
            if (userAuthorized == false) {
                let cart = JSON.parse(localStorage.getItem("cartItem") || "{}")
                if (cart[id]) {
                    cart[id].quantity += quantity
                } else {
                    cart[id] = { quantity, name, price, thumbnailUrl, brand, film, maxQuantity }
                }
                if (cart[id].quantity > maxQuantity) {
                    cart[id].quantity = maxQuantity
                }
                localStorage.setItem("cartItem", JSON.stringify(cart))
                $("#cart-badge").html(Object.keys(cart).length)
            } else {
                async function postAddToCart(url = "", data = {}) {
                    // Default options are marked with *
                    const response = await fetch(url, {
                        method: "POST", // *GET, POST, PUT, DELETE, etc.
                        mode: "cors", // no-cors, *cors, same-origin
                        cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
                        credentials: "same-origin", // include, *same-origin, omit
                        headers: {
                            "Content-Type": "application/json",
                            // 'Content-Type': 'application/x-www-form-urlencoded',
                        },
                        redirect: "follow", // manual, *follow, error
                        referrerPolicy: "no-referrer", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                        body: JSON.stringify(data), // body data type must match "Content-Type" header
                    });
                    return response.json(); // parses JSON response into native JavaScript objects
                }
                postAddToCart("/Cart/AddToCart", { productId: id, quantity: quantity }).then((data) => {
                    window.location.reload()
                })
            }
            $("#liveToast").removeClass("hide").addClass("show")
            $("#toast-content").html(`Đã thêm sản phẩm ${name} vào giỏ hàng.`)
            setTimeout(() => {
               $("#close-btn").click()
            }, 2000)
        })
    })
</script>
<!--Main layout-->
